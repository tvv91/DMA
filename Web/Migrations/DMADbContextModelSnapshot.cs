// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web.Db;

#nullable disable

namespace Web.Migrations
{
    [DbContext(typeof(DMADbContext))]
    partial class DMADbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Web.Models.Adc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Adces");
                });

            modelBuilder.Entity("Web.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Web.Models.Amplifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Amplifiers");
                });

            modelBuilder.Entity("Web.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Web.Models.Bitness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bitnesses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Value = 1
                        },
                        new
                        {
                            Id = 2,
                            Value = 24
                        },
                        new
                        {
                            Id = 3,
                            Value = 32
                        },
                        new
                        {
                            Id = 4,
                            Value = 64
                        });
                });

            modelBuilder.Entity("Web.Models.Cartridge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Cartridges");
                });

            modelBuilder.Entity("Web.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Web.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Web.Models.DigitalFormat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DigitalFormats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "FLAC"
                        },
                        new
                        {
                            Id = 2,
                            Name = "DSD64"
                        },
                        new
                        {
                            Id = 3,
                            Name = "DSD128"
                        },
                        new
                        {
                            Id = 4,
                            Name = "DSD256"
                        },
                        new
                        {
                            Id = 5,
                            Name = "DSD512"
                        },
                        new
                        {
                            Id = 6,
                            Name = "WV"
                        });
                });

            modelBuilder.Entity("Web.Models.Digitization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdcId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int?>("AmplifierId")
                        .HasColumnType("int");

                    b.Property<int?>("BitnessId")
                        .HasColumnType("int");

                    b.Property<int?>("CartridgeId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("DigitalFormatId")
                        .HasColumnType("int");

                    b.Property<string>("Discogs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("FormatId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsFirstPress")
                        .HasColumnType("bit");

                    b.Property<int?>("LabelId")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int?>("ReissueId")
                        .HasColumnType("int");

                    b.Property<int?>("SamplingId")
                        .HasColumnType("int");

                    b.Property<double?>("Size")
                        .HasColumnType("float");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SourceFormatId")
                        .HasColumnType("int");

                    b.Property<int?>("StorageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VinylStateId")
                        .HasColumnType("int");

                    b.Property<int?>("WireId")
                        .HasColumnType("int");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdcId");

                    b.HasIndex("AlbumId");

                    b.HasIndex("AmplifierId");

                    b.HasIndex("BitnessId");

                    b.HasIndex("CartridgeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DigitalFormatId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("FormatId");

                    b.HasIndex("LabelId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("ReissueId");

                    b.HasIndex("SamplingId");

                    b.HasIndex("SourceFormatId");

                    b.HasIndex("StorageId");

                    b.HasIndex("VinylStateId");

                    b.HasIndex("WireId");

                    b.HasIndex("YearId");

                    b.ToTable("Digitizations");
                });

            modelBuilder.Entity("Web.Models.EquipmentInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdcId")
                        .HasColumnType("int");

                    b.Property<int?>("AmplifierId")
                        .HasColumnType("int");

                    b.Property<int?>("CartridgeId")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int?>("WireId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdcId");

                    b.HasIndex("AmplifierId");

                    b.HasIndex("CartridgeId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("WireId");

                    b.ToTable("EquipmentInfo");
                });

            modelBuilder.Entity("Web.Models.FormatInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BitnessId")
                        .HasColumnType("int");

                    b.Property<int?>("DigitalFormatId")
                        .HasColumnType("int");

                    b.Property<int?>("SamplingId")
                        .HasColumnType("int");

                    b.Property<double?>("Size")
                        .HasColumnType("float");

                    b.Property<int?>("SourceFormatId")
                        .HasColumnType("int");

                    b.Property<int?>("VinylStateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BitnessId");

                    b.HasIndex("DigitalFormatId");

                    b.HasIndex("SamplingId");

                    b.HasIndex("SourceFormatId");

                    b.HasIndex("VinylStateId");

                    b.ToTable("FormatInfo");
                });

            modelBuilder.Entity("Web.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Web.Models.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("Web.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Manufacturer");
                });

            modelBuilder.Entity("Web.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Web.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Web.Models.PostCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PostId");

                    b.ToTable("PostCategories");
                });

            modelBuilder.Entity("Web.Models.Reissue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reissues");
                });

            modelBuilder.Entity("Web.Models.Sampling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Samplings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Value = 96.0
                        },
                        new
                        {
                            Id = 2,
                            Value = 192.0
                        },
                        new
                        {
                            Id = 3,
                            Value = 384.0
                        },
                        new
                        {
                            Id = 4,
                            Value = 2.7999999999999998
                        },
                        new
                        {
                            Id = 5,
                            Value = 5.5999999999999996
                        },
                        new
                        {
                            Id = 6,
                            Value = 11.199999999999999
                        },
                        new
                        {
                            Id = 7,
                            Value = 22.5
                        });
                });

            modelBuilder.Entity("Web.Models.SourceFormat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SourceFormats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "LP 12'' 33RPM"
                        },
                        new
                        {
                            Id = 2,
                            Name = "EP 10'' 45RPM"
                        },
                        new
                        {
                            Id = 3,
                            Name = "EP 12'' 45RPM"
                        },
                        new
                        {
                            Id = 4,
                            Name = "SINGLE 7'' 45RPM"
                        },
                        new
                        {
                            Id = 5,
                            Name = "SINGLE 12'' 45RPM"
                        },
                        new
                        {
                            Id = 6,
                            Name = "SHELLAC 10'' 78RPM"
                        });
                });

            modelBuilder.Entity("Web.Models.Statistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("Web.Models.Storage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Storages");
                });

            modelBuilder.Entity("Web.Models.VinylState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VinylStates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mint"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Near Mint"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Very Good+"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Very Good"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Good"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Unknown"
                        });
                });

            modelBuilder.Entity("Web.Models.Wire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Wires");
                });

            modelBuilder.Entity("Web.Models.Year", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Years");
                });

            modelBuilder.Entity("Web.Models.Adc", b =>
                {
                    b.HasOne("Web.Models.Manufacturer", "Manufacturer")
                        .WithMany("Adcs")
                        .HasForeignKey("ManufacturerId");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Web.Models.Album", b =>
                {
                    b.HasOne("Web.Models.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web.Models.Genre", "Genre")
                        .WithMany("Albums")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Web.Models.Amplifier", b =>
                {
                    b.HasOne("Web.Models.Manufacturer", "Manufacturer")
                        .WithMany("Amplifiers")
                        .HasForeignKey("ManufacturerId");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Web.Models.Cartridge", b =>
                {
                    b.HasOne("Web.Models.Manufacturer", "Manufacturer")
                        .WithMany("Cartridges")
                        .HasForeignKey("ManufacturerId");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Web.Models.Digitization", b =>
                {
                    b.HasOne("Web.Models.Adc", null)
                        .WithMany("Digitizations")
                        .HasForeignKey("AdcId");

                    b.HasOne("Web.Models.Album", "Album")
                        .WithMany("Digitizations")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web.Models.Amplifier", null)
                        .WithMany("Digitizations")
                        .HasForeignKey("AmplifierId");

                    b.HasOne("Web.Models.Bitness", null)
                        .WithMany("Digitizations")
                        .HasForeignKey("BitnessId");

                    b.HasOne("Web.Models.Cartridge", null)
                        .WithMany("Digitizations")
                        .HasForeignKey("CartridgeId");

                    b.HasOne("Web.Models.Country", "Country")
                        .WithMany("Digitizations")
                        .HasForeignKey("CountryId");

                    b.HasOne("Web.Models.DigitalFormat", null)
                        .WithMany("Digitizations")
                        .HasForeignKey("DigitalFormatId");

                    b.HasOne("Web.Models.EquipmentInfo", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId");

                    b.HasOne("Web.Models.FormatInfo", "Format")
                        .WithMany()
                        .HasForeignKey("FormatId");

                    b.HasOne("Web.Models.Label", "Label")
                        .WithMany("Digitizations")
                        .HasForeignKey("LabelId");

                    b.HasOne("Web.Models.Player", null)
                        .WithMany("Digitizations")
                        .HasForeignKey("PlayerId");

                    b.HasOne("Web.Models.Reissue", "Reissue")
                        .WithMany("Digitizations")
                        .HasForeignKey("ReissueId");

                    b.HasOne("Web.Models.Sampling", null)
                        .WithMany("Digitizations")
                        .HasForeignKey("SamplingId");

                    b.HasOne("Web.Models.SourceFormat", null)
                        .WithMany("Digitizations")
                        .HasForeignKey("SourceFormatId");

                    b.HasOne("Web.Models.Storage", "Storage")
                        .WithMany("Digitizations")
                        .HasForeignKey("StorageId");

                    b.HasOne("Web.Models.VinylState", null)
                        .WithMany("Digitizations")
                        .HasForeignKey("VinylStateId");

                    b.HasOne("Web.Models.Wire", null)
                        .WithMany("Digitizations")
                        .HasForeignKey("WireId");

                    b.HasOne("Web.Models.Year", "Year")
                        .WithMany("Digitizations")
                        .HasForeignKey("YearId");

                    b.Navigation("Album");

                    b.Navigation("Country");

                    b.Navigation("Equipment");

                    b.Navigation("Format");

                    b.Navigation("Label");

                    b.Navigation("Reissue");

                    b.Navigation("Storage");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("Web.Models.EquipmentInfo", b =>
                {
                    b.HasOne("Web.Models.Adc", "Adc")
                        .WithMany()
                        .HasForeignKey("AdcId");

                    b.HasOne("Web.Models.Amplifier", "Amplifier")
                        .WithMany()
                        .HasForeignKey("AmplifierId");

                    b.HasOne("Web.Models.Cartridge", "Cartridge")
                        .WithMany()
                        .HasForeignKey("CartridgeId");

                    b.HasOne("Web.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId");

                    b.HasOne("Web.Models.Wire", "Wire")
                        .WithMany()
                        .HasForeignKey("WireId");

                    b.Navigation("Adc");

                    b.Navigation("Amplifier");

                    b.Navigation("Cartridge");

                    b.Navigation("Player");

                    b.Navigation("Wire");
                });

            modelBuilder.Entity("Web.Models.FormatInfo", b =>
                {
                    b.HasOne("Web.Models.Bitness", "Bitness")
                        .WithMany()
                        .HasForeignKey("BitnessId");

                    b.HasOne("Web.Models.DigitalFormat", "DigitalFormat")
                        .WithMany()
                        .HasForeignKey("DigitalFormatId");

                    b.HasOne("Web.Models.Sampling", "Sampling")
                        .WithMany()
                        .HasForeignKey("SamplingId");

                    b.HasOne("Web.Models.SourceFormat", "SourceFormat")
                        .WithMany()
                        .HasForeignKey("SourceFormatId");

                    b.HasOne("Web.Models.VinylState", "VinylState")
                        .WithMany()
                        .HasForeignKey("VinylStateId");

                    b.Navigation("Bitness");

                    b.Navigation("DigitalFormat");

                    b.Navigation("Sampling");

                    b.Navigation("SourceFormat");

                    b.Navigation("VinylState");
                });

            modelBuilder.Entity("Web.Models.Player", b =>
                {
                    b.HasOne("Web.Models.Manufacturer", "Manufacturer")
                        .WithMany("Players")
                        .HasForeignKey("ManufacturerId");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Web.Models.PostCategory", b =>
                {
                    b.HasOne("Web.Models.Category", "Category")
                        .WithMany("PostCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web.Models.Post", "Post")
                        .WithMany("PostCategories")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Web.Models.Wire", b =>
                {
                    b.HasOne("Web.Models.Manufacturer", "Manufacturer")
                        .WithMany("Wires")
                        .HasForeignKey("ManufacturerId");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Web.Models.Adc", b =>
                {
                    b.Navigation("Digitizations");
                });

            modelBuilder.Entity("Web.Models.Album", b =>
                {
                    b.Navigation("Digitizations");
                });

            modelBuilder.Entity("Web.Models.Amplifier", b =>
                {
                    b.Navigation("Digitizations");
                });

            modelBuilder.Entity("Web.Models.Artist", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("Web.Models.Bitness", b =>
                {
                    b.Navigation("Digitizations");
                });

            modelBuilder.Entity("Web.Models.Cartridge", b =>
                {
                    b.Navigation("Digitizations");
                });

            modelBuilder.Entity("Web.Models.Category", b =>
                {
                    b.Navigation("PostCategories");
                });

            modelBuilder.Entity("Web.Models.Country", b =>
                {
                    b.Navigation("Digitizations");
                });

            modelBuilder.Entity("Web.Models.DigitalFormat", b =>
                {
                    b.Navigation("Digitizations");
                });

            modelBuilder.Entity("Web.Models.Genre", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("Web.Models.Label", b =>
                {
                    b.Navigation("Digitizations");
                });

            modelBuilder.Entity("Web.Models.Manufacturer", b =>
                {
                    b.Navigation("Adcs");

                    b.Navigation("Amplifiers");

                    b.Navigation("Cartridges");

                    b.Navigation("Players");

                    b.Navigation("Wires");
                });

            modelBuilder.Entity("Web.Models.Player", b =>
                {
                    b.Navigation("Digitizations");
                });

            modelBuilder.Entity("Web.Models.Post", b =>
                {
                    b.Navigation("PostCategories");
                });

            modelBuilder.Entity("Web.Models.Reissue", b =>
                {
                    b.Navigation("Digitizations");
                });

            modelBuilder.Entity("Web.Models.Sampling", b =>
                {
                    b.Navigation("Digitizations");
                });

            modelBuilder.Entity("Web.Models.SourceFormat", b =>
                {
                    b.Navigation("Digitizations");
                });

            modelBuilder.Entity("Web.Models.Storage", b =>
                {
                    b.Navigation("Digitizations");
                });

            modelBuilder.Entity("Web.Models.VinylState", b =>
                {
                    b.Navigation("Digitizations");
                });

            modelBuilder.Entity("Web.Models.Wire", b =>
                {
                    b.Navigation("Digitizations");
                });

            modelBuilder.Entity("Web.Models.Year", b =>
                {
                    b.Navigation("Digitizations");
                });
#pragma warning restore 612, 618
        }
    }
}
