@model AlbumDataRequest;

<script>
    
    $(document).ready(async () => {
        await start();
    });

    connection.onclose(async () => {
        await start();
    });
    
    $(()=> {
        $("input[id$='_input']").on("keypress", (e)=> {
            $("input[id$='_input']").autocomplete({
                source: `/search/${e.target.id.replace("_input", "")}`,
                messages: {
                    noResults: '',
                    results: () => {}
                }
            });
        });
    });

    function showError(message) {
        $("#errormessage").text(message);
        $(".alert").addClass("show");
        $(".alert").alert();
    }

    function onSubmit() {
        let value = $("#sizeinput").val();
        if (value.includes(".")) {
            $("#sizeinput:text").val(value.replace(/\./g, ','));
        }
        
        switch ($("#action").val()) {
            case "newalbum":
                sessionStorage.setItem("albumcreated", "1");
                break;
            case "update":
                sessionStorage.setItem("albumupdated", "1");
                break;
        }
    }

    /*
    Some checks for prevention to save incorrect data
    for example, if you select any DSD format as digital format
    and bitness more than 1, which impossible
    */
    function checkValidData() {
        const dsdformats = ["dsd64", "dsd128", "dsd256", "dsd512"];
        let codec = $("#digitalformat_input").val().toLowerCase();
        let bitness = $("#bitness_input").val();
        let sampling = $("#sampling_input").val();
        if (codec !== "" && bitness !== "" && sampling !== "") {
            if (dsdformats.some(x => codec.includes(x))) {
                if (bitness !== "1") {
                    showError("DSD is 1 bit/s format");
                }
                else if (codec == 'dsd64' && (sampling !== "2.8" && sampling !== "2,8")) {
                    showError("DSD64 sampling is 2.8 (MHz)");
                }
                else if (codec == 'dsd128' && sampling !== "5.6" && sampling !== "5,6") {
                    showError("DSD128 sampling is 5.6 (MHz)");
                }
                else if (codec == 'dsd256' && sampling !== "11.2" && sampling !== "11,2") {
                    showError("DSD256 sampling is 11.2 (MHz)");
                }
                else if (codec == 'dsd512' && sampling !== "22.5" && sampling !== "22,5") {
                    showError("DSD512 sampling is 22.5 (MHz)");
                } else {
                    $(".alert").removeClass("show");
                }
            }
        }
    }
</script>

<a class="btn btn-secondary mt-3" asp-action="index" asp-controller="album">Back</a>
<form asp-action="@Model.Action" method="post" onsubmit="onSubmit()">
    <div asp-validation-summary="ModelOnly"></div>
    <input type="hidden" id="coverid" asp-for="AlbumCover" />
    <input type="hidden" id="albumid" asp-for="AlbumId" />
    <input type="hidden" id="action" asp-for="Action" />
    <div class="new-update-album">
        <div class="cover-image">
            <div class="image-place justifiy-element-size dropzone" id="mydropzone"></div>
        </div>
        <div class="album-main-info">
            <div class="album-form-input">
                <input id="artist_input" class="input-textbox" asp-for="Artist" autocomplete="on" placeholder="Artist" />
                <input id="album" class="input-textbox" asp-for="Album" placeholder="Album" />
                <input id="genre_input" class="input-textbox" asp-for="Genre" autocomplete="on" placeholder="Genre" />
                <input id="year_input" class="input-textbox" asp-for="Year" autocomplete="on" placeholder="Year"/>
                <input id="reissue_input" class="input-textbox" asp-for="Reissue" placeholder="Reissue" />
                <input class="input-textbox" asp-for="Country" placeholder="Country"/>
                <input class="input-textbox" asp-for="Label" placeholder="Label"/>
                <input class="input-textbox" asp-for="Source" placeholder="Source" />
                <input class="input-textbox" asp-for="Discogs" placeholder="Discogs"/>
                <input id="sizeinput" class="input-textbox" asp-for="Size" placeholder="Size(Gb)"/>
                <input class="input-textbox" asp-for="Storage" placeholder="Storage" />
            </div>
        </div>
        <div class="tech-info-wrapper">
            <div class="tech-info-digitization">
                <h4 style="text-align:center">Digitization</h4>
                <hr />
                <div class="album-form-input">
                    <input id="vinylstate_input" class="input-textbox" asp-for="VinylState" autocomplete="on" placeholder="Vinyl state"/>
                    <input id="digitalformat_input" class="input-textbox" asp-for="DigitalFormat" placeholder="Digital format" autocomplete="on" onchange="checkValidData()" />
                    <input id="bitness_input" class="input-textbox" asp-for="Bitness" onchange="checkValidData()" placeholder="Bitness" />
                    <input id="sampling_input" class="input-textbox" asp-for="Sampling" onchange="checkValidData()" placeholder="Sampling" />
                    <input id="sourceformat_input" class="input-textbox" asp-for="SourceFormat" placeholder="Source format" />
                </div>
                <div class="alert alert-danger alert-dismissible fade" role="alert">
                    <strong>WARNING</strong>
                    <div id="errormessage"></div>
                </div>
            </div>
            <div class="tech-info-hardware">
                <h4 style="text-align:center">Hardware</h4>
                <hr />
                <div class="album-form-input">
                    <input id="player_input" class="input-textbox" asp-for="Player" placeholder="Player" />
                    <input id="player_manufacturer_input" class="input-textbox" asp-for="PlayerManufacturer" placeholder="Manufacturer" />
                    <input id="cartridge_input" class="input-textbox" asp-for="Cartridge" placeholder="Cartridge" />
                    <input id="cartridge_manufacturer_input" class="input-textbox" asp-for="CartridgeManufacturer" placeholder="Manufacturer" />
                    <input id="amp_input" class="input-textbox" asp-for="Amplifier" placeholder="Amplifier" />
                    <input id="amp_manufacturer_input" class="input-textbox" asp-for="AmplifierManufacturer" placeholder="Manufacturer" />
                    <input id="adc_input" class="input-textbox" asp-for="Adc" placeholder="Adc" />
                    <input id="adc_manufacturer_input" class="input-textbox" asp-for="AdcManufacturer" placeholder="Manufacturer" />
                    <input id="wire_input" class="input-textbox" asp-for="Wire" placeholder="Wire" />                    
                    <input id="wire_manufacturer_input" class="input-textbox" asp-for="WireManufacturer" placeholder="Manufacturer" />
                </div>
            </div>
        </div>
    </div>
    <button id="submit_button" type="submit" style="float:right;" class="mt-2">
        <i class="fa-sharp fa-solid fa-check"></i>
        Save
    </button>
</form>

<script>
    Dropzone.autoDiscover = false;
    let myDropzone = new Dropzone("div#mydropzone", 
    {
        url: "/UploadCover",
        addRemoveLinks: true,
        thumbnailWidth: 300,
        thumbnailHeight: 300,
        resizeWidth: 300,
        resizeHeight: 300,
        dictDefaultMessage: "<b>Upload album cover</b><br><i>Images > 300x300 pixels will be resized</i>",
        acceptedFiles: ".jpeg,.png,.jpg",
            success: (file, data) => {
                $("#coverid").val(data.filename);
                let preview = $(file.previewElement);
                preview.addClass("dz-success text-success");
            },
            init: function() {
                const coverId = $("#coverid").val();
                if (coverId !== "") {
                    let myDropzone = this;
                    let coverUrl = window.location.href.includes("edit") ? coverId : `/temp/${coverId}`;
                    myDropzone.displayExistingFile({}, coverUrl);
                }
            },
            removedfile: function(file) {
                $("#coverid").val("");
                if (file.previewElement != null && file.previewElement.parentNode != null) {
                    file.previewElement.parentNode.removeChild(file.previewElement);
                }
                return this._updateMaxFilesReachedClass();
            }
    });
</script>