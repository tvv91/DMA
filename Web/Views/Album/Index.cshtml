@model AlbumViewModel

<script>
    let albumIds = @Json.Serialize(Model.Albums.Select(a => a.Id));
    let currentPage = @Json.Serialize(Model.CurrentPage);

    $(document).ready(async () => {

        if (@Json.Serialize(Model.Albums.Count()) === 0) {
            $("#add-button").attr("class", "fa fa-plus-square fa-2xl fa-pull-left m-3 addbutton blinker-button");
        }

        $(`#pagination a[id=${currentPage}]`).addClass("active");

        // старт SignalR
        await start();
        await getAlbumCovers();

        if (sessionStorage.getItem("albumdeleted") === "1") {
            $('#toast_deleted').toast('show');
            sessionStorage.removeItem("albumdeleted");
        }

        localStorage.setItem("BACK_PAGE_INDEX", currentPage);
    });

    async function getAlbumCovers() {
        try {
            await connection.invoke("GetAlbumCovers", connection.connectionId, albumIds);
        } catch (err) {
            console.error("Error sending request to GetAlbumCovers", err);
        }
    }

    connection.onclose(async () => {
        await start();
    });

    connection.on("ReceivedAlbumCover", (albumId, cover) => {
        $(`#${albumId}`).attr("src", cover).removeClass("spinner-border text-black");
    });

    function onAlbumLoad(albumId) {
        if (!albumIds.includes(albumId)) {
            albumIds.push(albumId);
        }
    }
</script>

<div class="toast-container position-fixed bottom-0 end-0 p-3">
    <div id="toast_deleted" class="toast toast-body-deleted" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">Information</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            Album successfully deleted
        </div>
    </div>
</div>

@if (Model.Albums.Any())
{
    <div class="wrapper">
        @foreach (var album in Model.Albums)
        {
            <div>
                <a href="album/@album.Id">
                    <img id="@album.Id" class="spinner-border text-black" onload="onAlbumLoad(@album.Id)" />
                </a>
                <div class="album-base-info">
                    <div>@album.Artist.Data</div>
                    <div>@album.Data</div>
                </div>
            </div>
        }
        <div class="album-pagination">
            <nav aria-label="Page navigation example">
                <ul id="pagination" class="pagination justify-content-center">
                    @for (int i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a id="@i" class="page-link" href="album?page=@i">@i</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
}
else
{
    <h4 class="mt-5 text-center">
        Ooops... Invalid page / no data in database. Try to add first album.
    </h4>
}