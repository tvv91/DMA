<div class="toast-container position-fixed bottom-0 end-0 p-3">
    <div id="toast_deleted" class="toast toast-body-deleted" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">Information</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            Equipment successfully deleted
        </div>
    </div>
</div>
<div>
    <div class="container">
        <ul id="navigation" class="nav nav-tabs mt-2" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link"
                        id="adc-tab"
                        data-bs-toggle="tab"
                        data-bs-target="#adc"
                        type="button" role="tab"
                        aria-controls="adc"
                        aria-selected="true">
                    ADC
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link"
                        id="amplifier-tab"
                        data-bs-toggle="tab"
                        data-bs-target="#amplifier"
                        type="button" role="tab"
                        aria-controls="amplifier"
                        aria-selected="false">
                    Amplifier
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link"
                        id="cartridge-tab"
                        data-bs-toggle="tab"
                        data-bs-target="#cartridge"
                        type="button" role="tab"
                        aria-controls="cartridge"
                        aria-selected="false">
                    Cartridge
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link"
                        id="player-tab"
                        data-bs-toggle="tab"
                        data-bs-target="#player"
                        type="button" role="tab"
                        aria-controls="player"
                        aria-selected="false">
                    Player
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link"
                        id="wire-tab"
                        data-bs-toggle="tab"
                        data-bs-target="#wire"
                        type="button" role="tab"
                        aria-controls="wire"
                        aria-selected="false">
                    Wire
                </button>
            </li>
        </ul>
        <div id="items-container" class="equipment-box"></div>
    </div>
    <div class="eq-pagination">
        <nav>
            <ul id="pagination" class="pagination justify-content-center"/>
        </nav>
    </div>
</div>
<script>
    const CURRENT_TAB = "CURRENT_TAB";
    const BACK_PAGE_EQUIPMENT_INDEX = "BACK_PAGE_EQUIPMENT_INDEX";
    const CATEGORY_MAP = new Map([
        ["adc-tab", "adc"],
        ["amplifier-tab", "amplifier"],
        ["cartridge-tab", "cartridge"],
        ["player-tab", "player"],
        ["wire-tab", "wire"],
    ]);

    $(document).ready(async () => {
        await start();

        showDeletedToastIfNeeded();
        await initializeTab();
        setupEventHandlers();
    });

    function showDeletedToastIfNeeded() {
        if (sessionStorage.getItem("equipment_deleted") === "1") {
            $('#toast_deleted').toast('show');
            sessionStorage.removeItem("equipment_deleted");
        }
    }

    async function initializeTab() {
        const lastTab = localStorage.getItem(CURRENT_TAB) || "adc-tab";
        const lastPage = parseInt(localStorage.getItem(BACK_PAGE_EQUIPMENT_INDEX)) || 1;
        await loadCategoryPage(lastTab, lastPage);
    }

    function setupEventHandlers() {
        $("#pagination").on("click", async (e) => {
            const pageId = e.target.id;
            if (pageId !== "pagination" && $(".page-link.active").attr("id") !== pageId) {
                await loadCategoryPage(localStorage.getItem(CURRENT_TAB), parseInt(pageId));
            }
        });

        $("#navigation li button").on("click", async (e) => {
            const newTab = e.target.id;
            if (localStorage.getItem(CURRENT_TAB) !== newTab) {
                await loadCategoryPage(newTab, 1);
            }
        });

        connection.onclose(async () => {
            console.log("Connection lost, retrying...");
            await start();
        });
    }

    async function loadCategoryPage(categoryId, page = 1) {
        localStorage.setItem(CURRENT_TAB, categoryId);
        localStorage.setItem(BACK_PAGE_EQUIPMENT_INDEX, page);

        clearItemsAndPagination();
        await getHardwareByCategory(CATEGORY_MAP.get(categoryId), page);
        $(`a.page-link`).removeClass("active");
        $(`a[id=${page}]`).addClass("active");
        $("#navigation li button").removeClass("active");
        $(`#${categoryId}`).addClass("active");
    }

    function clearItemsAndPagination() {
        $('#items-container').empty();
        $('#pagination').empty();
    }

    async function getHardwareByCategory(category, page) {
        try {
            await connection.invoke("GetHardwareByCategory", connection.connectionId, category, page);
        } catch (err) {
            console.error("Error sending request to GetHardwareByCategory", err);
        }
    }

    connection.on("ReceivedItems", (items) => {
        const container = $("#items-container").empty();

        if (!items || items.length === 0) {
            container.append(`<div class="eq-noitems">There are no items</div>`);
            return;
        }

        const category = CATEGORY_MAP.get(localStorage.getItem(CURRENT_TAB));

        items.forEach(x => {
            container.append(`
                <div class="equipment-card">
                    <a href="equipment/${category}/${x.id}">
                        <div class="image-wrapper" style="position:relative; min-height:120px; display:flex; justify-content:center; align-items:center;">
                            <div id="spinner-${x.id}" class="spinner-border" role="status"
                                 style="position:absolute;">
                            </div>
                            <img id="img-${x.id}" src="" style="display:none;" />
                        </div>
                    </a>
                    <div class="equipment-info">
                        <span class="manufacturer">${x.manufacturer ?? ""}</span>
                        <b>${x.model}</b>
                    </div>
                </div>
            `);
        });
    });

    connection.on("ReceivedItemImage", (id, src) => {
        const spinner = $(`#spinner-${id}`);
        const img = $(`#img-${id}`);

        if (src && !src.includes("nocover")) {
            img.attr("src", src).on("load", () => {
                spinner.hide();
                img.fadeIn(500);
            });
        } else {
            spinner.hide();
            img.replaceWith(`<i class="fa-regular fa-image fa-5x" style="color:black"></i>`);
        }
    });

    connection.on("ReceivedItemsCount", (count) => {
        const pagination = $("#pagination").empty();
        if (count > 0) {
            for (let c = 1; c <= count; c++) {
                pagination.append(`<li class="page-item"><a id="${c}" class="page-link" href="#">${c}</a></li>`);
            }
        }
    });
</script>
