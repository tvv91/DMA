@model PostViewModel
<script>
    $(document).ready(async () => {
        await start();
    });

    // detect new changes (title, content, etc.)
    let isChanged = false;
    // this value need when we automatically created draft during first autosave
    let postId = 0;

    // save changes every 30s
    setInterval(() => autoSave(), 30000);
    
    async function autoSave() {
        // if we have new changes
        if (isChanged) {
            isChanged = false;
            $("#spinnerbutton").prop("hidden", "");
            $("#publishbutton").prop("disabled", true);
            
            try {
                await connection.invoke("AutoSavePost", connection.connectionId, postId, $("#title").val(), $("#description").val(), $("#content").val(), $("#category").val());
            } catch (err) {
                console.log("Error sending request to AutoSavePost");
            }
        }
    }

    // event when create post first time as draft
    connection.on("PostCreated", (id, createdDate) => {
        // save post id
        postId = id;
        // disable spinner on save button
        $("#spinnerbutton").prop("hidden", "true");
        // disable publish button (to minimize db issues during autosaving and publishing same post)
        $("#publishbutton").prop("disabled", false);
        // show last updated (created) time
        $("#updatedAt").text(createdDate);
        // update viewmodel bind property
        $("#postId").val(id);
        // disable save button
        $("#savebutton").prop("disabled", true);
     });

     // event when update already created post
    connection.on("PostUpdated", (updatedDate) => {
        // disable spinner
        $("#spinnerbutton").prop("hidden", "true");
        // enable publish button
        $("#publishbutton").prop("disabled", false);
        // show updated date
        $("#updatedAt").text(updatedDate);
        // disable save button
        $("#savebutton").prop("disabled", true);
     });

    function onChange() {
        let title = $("#title").val();
        let description = $("#description").val();
        let content = $("#content").val();
        let category = $("#category").val();        

        // when all required fields are filled
        if (title && description && content && category !== 'Category') {
            // disable save button
            $("#savebutton").prop("disabled", false);
            // we have some changes
            isChanged = true;
        } else {
            // enable save button
            $("#savebutton").prop("disabled", true);
            // no changes
            isChanged = false
        }
    }   

    function onPreview() {
        $(".modal-body").html($("#content").val());
    }
</script>
<form method="post" asp-action="create">
    <input id="postId" asp-for="Id" type="hidden" />
    <div class="post-container">
        <div asp-validation-summary="ModelOnly"></div>
        <div class="post-buttons mt-2 mb-2">
            <label id="updatedAt"></label>
            <button class="btn btn-outline-dark" type="button" data-bs-toggle="modal" data-bs-target="#previewModal" onclick="onPreview()">
                Preview
            </button>
            <button id="savebutton" class="btn btn-outline-info" type="button" disabled onclick="autoSave()">
                <span id="spinnerbutton" class="spinner-border spinner-border-sm" role="status" aria-hidden="true" hidden></span>
                Save (Draft)
            </button>
            <button id="publishbutton" class="btn btn-outline-success" type="submit" >
                Publish
            </button>
        </div>
        <div class="input-group mb-2">
            <input id="title" type="text" class="form-control me-1" placeholder="Title" asp-for="@Model.Title" onchange="onChange()">
            <input id="description" type="text" class="form-control ms-1" placeholder="Description" asp-for="@Model.Description" onchange="onChange()">
            <select id="category" class="custom-select ms-1" asp-for="@Model.Category" onchange="onChange()">
                <option selected>Category</option>
                <option value="Developing">Developing</option>
                <option value="Releases">Releases</option>
                <option value="Other">Other</option>
            </select>
        </div>
        <textarea id="content" class="form-control" rows="25" asp-for="@Model.Content" oninput="onChange()"></textarea>
    </div>
</form>
<div class="modal fade" id="previewModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-body"></div>
        </div>
    </div>
</div>
